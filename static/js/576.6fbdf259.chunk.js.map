{"version":3,"file":"static/js/576.6fbdf259.chunk.js","mappings":"uQAsCA,EAnCa,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,qCAEE,kBAAMC,UAAU,cAAcC,GAAG,cAAcL,SAT9B,SAAAM,GACnBA,EAAIC,iBACJP,EAASE,GACTC,EAAS,GACV,EAKG,WACE,kBACEK,KAAK,OACLC,KAAK,cACLC,aAAa,MACbC,YAAY,kBACZC,MAAOV,EACPW,SApBa,SAAAP,GACnBH,EAASG,EAAIQ,cAAcF,MAAMG,cAClC,KAoBK,mBAAQP,KAAK,SAAb,yBAIP,ECqCD,EA/De,WAAO,IAAD,EACnB,GAAwBP,EAAAA,EAAAA,UAAS,IAAjC,eAAOe,EAAP,KAAaC,EAAb,KAEA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,UAAGJ,EAAYK,IAAI,gBAAnB,QAA+B,IAEhDC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBF,EAAJ,CAIA,IAAMG,EAAU,mCAAG,+GAEQC,MAAM,uIAAD,OAC6GJ,IAH1H,cAETK,EAFS,gBAKIA,EAASC,OALb,OAKTb,EALS,OAMfC,GAAQ,yBAAUD,EAAKc,QAAf,IANO,kDAQfC,QAAQC,MAAR,MARe,0DAAH,qDAYhBN,EAAWH,EAdV,CAeF,GAAE,CAACA,IAOJ,OACE,iCACE,SAAC,EAAD,CAAMX,MAAOW,EAAavB,SAPT,SAAAE,GAEnBkB,EAD4B,KAAVlB,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAE/C,KAMG,wBACGc,EAAKiB,KAAI,SAAAC,GACR,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAI7B,IAAM+B,MAAO,CAAEC,KAAMhB,GAA9C,SACGa,EAAII,SAFAJ,EAAI7B,GAMhB,QAIR,C,sBCxDD,SAASkC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBlC,EAAQmC,EAAKnC,KAInB,CAHE,MAAOoB,GAEP,YADAU,EAAOV,EAET,CAEIe,EAAKC,KACPP,EAAQ7B,GAERqC,QAAQR,QAAQ7B,GAAOsC,KAAKP,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAM/B,GACb2B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQhC,EAClE,CAEA,SAASgC,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/Form/Form.js","pages/Movies/Movies.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Form = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = evt => {\n    setQuery(evt.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <div>\n      Movies\n      <form className=\"search-form\" id=\"search-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"searchValue\"\n          autoComplete=\"off\"\n          placeholder=\"Search movie...\"\n          value={query}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport Form from 'components/Form/Form';\n\nconst Movies = () => {\n  const [data, setData] = useState([]);\n\n  const [serchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const searchValue = serchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (searchValue === '') {\n      return;\n    }\n\n    const fetchMovie = async () => {\n      try {\n        const response = await fetch(\n          ` https://api.themoviedb.org/3/search/movie?api_key=2ea3a1cc18afc4f3a22942cd8d7fba10&language=en-US&page=1&include_adult=false&query=${searchValue}`\n        );\n        const data = await response.json();\n        setData(() => [...data.results]);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovie(searchValue);\n  }, [searchValue]);\n\n  const handleSubmit = query => {\n    const newParams = query !== '' ? { query } : {};\n    setSearchParams(newParams);\n  };\n\n  return (\n    <>\n      <Form value={searchValue} onSubmit={handleSubmit} />\n\n      <ul>\n        {data.map(obj => {\n          return (\n            <li key={obj.id}>\n              <Link to={`/movies/${obj.id}`} state={{ from: location }}>\n                {obj.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nMovies.propTypes = {\n  response: PropTypes.shape({\n    results: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        title: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["onSubmit","useState","query","setQuery","className","id","evt","preventDefault","type","name","autoComplete","placeholder","value","onChange","currentTarget","toLowerCase","data","setData","useSearchParams","serchParams","setSearchParams","location","useLocation","searchValue","get","useEffect","fetchMovie","fetch","response","json","results","console","error","map","obj","to","state","from","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}