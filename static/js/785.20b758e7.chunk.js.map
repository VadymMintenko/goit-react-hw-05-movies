{"version":3,"file":"static/js/785.20b758e7.chunk.js","mappings":"yNAwCA,UApCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,+GAEQC,MAAM,sCAAD,OACYP,EADZ,4EAFb,cAETQ,EAFS,gBAKIA,EAASC,OALb,OAKTN,EALS,OAMfC,GAAQ,yBAAUD,EAAKO,QAAf,IANO,kDAQfC,QAAQC,IAAR,MARe,0DAAH,qDAYhBN,GACD,GAAE,CAACN,IAEgB,IAAhBG,EAAKU,QACA,sCAGFV,EAAKW,KAAI,SAAAC,GACd,OACE,2BACE,wBAAKA,EAAIC,UACT,uBAAID,EAAIE,YAFDF,EAAIG,GAKhB,GACF,C,sBCpCD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=2ea3a1cc18afc4f3a22942cd8d7fba10&language=en-US&page=1`\n        );\n        const data = await response.json();\n        setData(() => [...data.results]);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  if (data.length === 0) {\n    return <p>No reviews</p>;\n  }\n\n  return data.map(obj => {\n    return (\n      <li key={obj.id}>\n        <h3>{obj.author}</h3>\n        <p>{obj.content}</p>\n      </li>\n    );\n  });\n};\nReviews.propTypes = {\n  movieId: PropTypes.string,\n};\nexport default Reviews;\n\n// sasda\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","data","setData","useEffect","fetchMovie","fetch","response","json","results","console","log","length","map","obj","author","content","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}