{"version":3,"file":"static/js/820.8574f916.chunk.js","mappings":"iOA8DA,UA3De,WAAO,IAAD,EACnB,GAAuCA,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,EAAK,UAAGL,EAAYM,IAAI,gBAAnB,QAA+B,GAEpCC,GAAWC,EAAAA,EAAAA,MAEXC,EAAU,mCAAG,WAAMJ,GAAN,yFACMK,MAAM,uIAAD,OAC6GL,IAFxH,cACXM,EADW,gBAIEA,EAASC,OAJX,OAIXT,EAJW,OAKjBC,GAAQ,yBAAUD,EAAKU,QAAf,IALS,2CAAH,sDAoBhB,OACE,iCACE,qCAEE,kBAAMC,UAAU,cAAcC,GAAG,cAAcC,SAThC,SAAAC,GACnBA,EAAIC,iBACJT,EAAWJ,EACZ,EAMK,WACE,kBACEc,KAAK,OACLC,KAAK,cACLC,aAAa,MACbC,YAAY,kBACZC,MAAOlB,EACPmB,SAvBW,SAAAP,GACnB,GAAyB,KAArBA,EAAIQ,OAAOF,MACb,OAAOtB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEI,MAAOY,EAAIQ,OAAOF,OACrC,KAoBO,mBAAQJ,KAAK,SAAb,2BAIJ,wBACGhB,EAAKuB,KAAI,SAAAC,GACR,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAIZ,IAAMc,MAAO,CAAEC,KAAMvB,GAA9C,SACGoB,EAAII,SAFAJ,EAAIZ,GAMhB,QAIR,C,sBC5DD,SAASiB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBhB,EAAQiB,EAAKjB,KAInB,CAHE,MAAOkB,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQX,GAERoB,QAAQT,QAAQX,GAAOqB,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMb,GACbS,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQd,EAClE,CAEA,SAASc,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["pages/Movies/Movies.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [serchParams, setSearchParams] = useSearchParams();\n  const [data, setData] = useState([]);\n  const query = serchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  const fetchMovie = async query => {\n    const response = await fetch(\n      ` https://api.themoviedb.org/3/search/movie?api_key=2ea3a1cc18afc4f3a22942cd8d7fba10&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    const data = await response.json();\n    setData(() => [...data.results]);\n  };\n\n  const handleChange = evt => {\n    if (evt.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: evt.target.value });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    fetchMovie(query);\n  };\n\n  return (\n    <>\n      <div>\n        Movies\n        <form className=\"search-form\" id=\"search-form\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"searchQuery\"\n            autoComplete=\"off\"\n            placeholder=\"Search movie...\"\n            value={query}\n            onChange={handleChange}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n\n      <ul>\n        {data.map(obj => {\n          return (\n            <li key={obj.id}>\n              <Link to={`/movies/${obj.id}`} state={{ from: location }}>\n                {obj.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useSearchParams","serchParams","setSearchParams","useState","data","setData","query","get","location","useLocation","fetchMovie","fetch","response","json","results","className","id","onSubmit","evt","preventDefault","type","name","autoComplete","placeholder","value","onChange","target","map","obj","to","state","from","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}